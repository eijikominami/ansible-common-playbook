# /common_playbook/roles/openssl/tasks

# ATTENTION ########################
# 以下の値は、各プロジェクトごとに指定すること
# 
# {{ version.ssl }}
#
####################################

# コンパイルに必要なパッケージをインストール
- name: "install the latest version of gcc, zlib-devel"
  yum: name={{ packages }} state=latest
  vars:
    packages:
      - gcc
      - zlib-devel

- name: "delete existing openssl source files"
  file: path=/usr/local/src/openssl-{{ version.ssl }} state=absent

- name: "download openssl source files"
  get_url: dest=/tmp force=yes timeout={{ get_url_timeout }} url="{{ ssl.source_url }}"

- name: "unpack openssl source files"
  unarchive: remote_src=yes src=/tmp/openssl-{{ version.ssl }}.tar.gz dest=/usr/local/src

# openssl configure options
#
# shared          	: In addition to the usual static libraries, create shared shared libraries" below.
# zlib				: Build with support for zlib compression/decompression.

- name: "configure openssl programs"
  command: chdir=/usr/local/src/openssl-{{ version.ssl }} ./config shared zlib

- name: "make openssl programs"
  command: make chdir=/usr/local/src/openssl-{{ version.ssl }}

- name: "install openssl programs"
  command: make install chdir=/usr/local/src/openssl-{{ version.ssl }}

# /lib64 にシンボリックリンクを作成
- name: "create a symbolic link of libcrypto.so"
  file: state=link src=/usr/local/lib64/libcrypto.so.1.1 path=/lib64/libcrypto.so
  when: version.ssl.find('1.1.') != -1

- name: "create a symbolic link of libssl.so"
  file: state=link src=/usr/local/lib64/libssl.so.1.1 path=/lib64/libssl.so
  when: version.ssl.find('1.1.') != -1

# 共通ライブラリにSSLライブラリのパスを追加する
- name: "add ssl library location in {{ ssl.so_lib_dir }}"
  lineinfile: path={{ ssl.so_lib_dir }} line="{{ ssl.dir }}/lib" backup=yes
  when: version.ssl.find('1.1.') == -1

- name: "add ssl library location in {{ ssl.so_lib_dir }}"
  lineinfile: path={{ ssl.so_lib_dir }} line="{{ ssl.dir }}/lib64" backup=yes
  when: version.ssl.find('1.1.') != -1

# 共通ライブラリの再読み込みを行う
- name: "configure dynamic linker run time bindings"
  command: ldconfig

- name: "show version of openssl"
  command: "{{ ssl.dir }}/bin/openssl version"
  register: openssl_version
  changed_when: false
  when: version.ssl.find('1.1.') == -1

- name: "show version of openssl"
  command: "/usr/local/bin/openssl version"
  register: openssl_version
  changed_when: false
  when: version.ssl.find('1.1.') != -1

- name: "debug version of openssl"
  debug: var=openssl_version.stdout_lines
  when: openssl_version is succeeded