# /common_playbook/roles/pacemaker/tasks

# ATTENTION ########################
# 以下の値は、各プロジェクトごとに指定すること
# また、実行時はprimaryグループの作成を行うこと
# 
#  {{ pacemaker.primary_ip }}
#  {{ pacemaker.primary_host }}
#  {{ pacemaker.secondary_ip }}
#  {{ pacemaker.secondary_host }}
#  {{ pacemaker.domain }}
#
####################################

- name: "install the latest version of pacemaker, corosync, pcs, elfutils-libelf-devel"
  yum: name={{ item }} state=latest
  with_items:
    - pacemaker
    - corosync
    - pcs
    - elfutils-libelf-devel

- name: "add the user 'hacluster'"
  user: name=hacluster password={{ pacemaker.hacluster_password | password_hash('sha512') }}

- name: "add a block to /etc/hosts if it does not exist"
  blockinfile:
    dest: /etc/hosts
    backup: yes
    block: |
      {{ pacemaker.primary_ip }} {{ pacemaker.primary_host }} {{ pacemaker.primary_host }}.{{ pacemaker.domain }}
      {{ pacemaker.secondary_ip }} {{ pacemaker.secondary_host }} {{ pacemaker.secondary_host }}.{{ pacemaker.domain }}

- name: "delete all clusters settings"
  command: "pcs cluster destroy"

- name: "start service pcsd, if not running"
  service: name=pcsd state=started enabled=yes

# プライマリーサーバのみで実行
- name: "authorize pcs cluster users and hosts"
  command: "pcs cluster auth {{ pacemaker.primary_host }} {{ pacemaker.secondary_host }} -u hacluster -p {{ pacemaker.hacluster_password }}" 
  when: inventory_hostname in groups['primary']  

- name: "create '{{ pacemaker.cluster_name }}' cluster"
  command: "pcs cluster setup --name {{ pacemaker.cluster_name }} {{ pacemaker.primary_host }} {{ pacemaker.secondary_host }}"
  when: inventory_hostname in groups['primary']  

- name: "start all clusters"
  command: "pcs cluster start --all"
  when: inventory_hostname in groups['primary']  

- name: "enable all clusters"
  command: "pcs cluster enable --all"
  when: inventory_hostname in groups['primary']  

- name: "disable stonith function"
  command: "pcs property set stonith-enabled=false"
  when: inventory_hostname in groups['primary']  

- name: "show status of pacemaker"
  command: "pcs status"
  register: pcs_status
  changed_when: false

- name: "debug status of pacemaker"
  debug: var=pcs_status.stdout_lines
  when: pcs_status is success